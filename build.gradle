import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
    id 'net.darkhax.curseforgegradle' version '1.1.15'
}

version = mod_version
group = maven_group

base {
    archivesName = mod_id
}

mixin {
    add sourceSets.main, "mixins.eomtw.refmap.json"
    config "eomtw.mixins.json"
}

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2023.09.03-1.20.1'

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://cursemaven.com" }
    maven { url "https://maven.architectury.dev/" }
    maven {
        name = "tocraftMavenPublic"
        url "https://maven.tocraft.dev/public"
    }

    maven {
        url "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.ftb.mods"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("dev.tocraft:craftedcore-forge:${project.minecraft_version}-${project.craftedcore_version}") { transitive = false }
    implementation fg.deobf("dev.ftb.mods:ftb-chunks-forge:${rootProject.ftb_chunks_version}") { transitive = false }
    implementation fg.deobf("dev.ftb.mods:ftb-library-forge:${rootProject.ftb_library_version}") { transitive = false }
    implementation fg.deobf("dev.ftb.mods:ftb-teams-forge:${rootProject.ftb_teams_version}") { transitive = false }
    implementation fg.deobf("curse.maven:enchanted-witchcraft-560363:5436354")
    implementation fg.deobf("curse.maven:smartbrainlib-661293:5654964")
    implementation fg.deobf("curse.maven:patchouli-306770:4966125")
    implementation fg.deobf("curse.maven:geckolib-388172:5675221")
    implementation fg.deobf("curse.maven:stateobserver-701213:5390510")
    implementation fg.deobf("curse.maven:ceramic-bucket-363799:4690918")
    implementation fg.deobf("curse.maven:bucketlib-560156:5674711")

    implementation fg.deobf("dev.architectury:architectury-forge:${rootProject.architectury_version}")
}

processResources {
    // define properties that can be used during resource processing
    inputs.property "version", project.version

    // this will replace the property "${version}" in your mods.toml
    // with the version you've defined in your gradle.properties
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : "",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "To_Craft",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.release = 17
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archivesBaseName + "-$project.name"
            version = rootProject.minecraft_version + "-" + project.mod_version
            from components.java
        }
    }
    repositories {
        if (System.getenv("MAVEN_PASS") != null) {
            maven {
                name = "tocraftMavenPublic"
                url "https://maven.tocraft.dev/public"

                credentials {
                    username = "tocraft"
                    password = System.getenv("MAVEN_PASS")
                }
            }
        }
    }
}

tasks.register('curseforge', TaskPublishCurseForge) {
    apiToken = System.getenv("CURSEFORGE_TOKEN")

    // The main file to upload
    def mainFile = upload(927399, jar)
    mainFile.displayName = project.minecraft_version + "-" + project.name + "-" + project.mod_version
    mainFile.releaseType = 'release'
    mainFile.addModLoader(project.name)
    mainFile.addRequirement("crafted-core")
    mainFile.changelog = "https://github.com/EraofMagic/eomtweaks/releases/tag/" + project.mod_version + "-" + project.minecraft_version
}
